<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!--
       Spring Application Context File

       Because we are using Spring's annotation based configuration, it is intended to put all application
       context information in a single file, rather than splitting into a main, hibernate, security, etc set
       of application context files.
    -->

    <context:annotation-config/>
        <!-- Scan for Spring managed beans (marked with the @Service() annotation) -->
    <context:component-scan base-package="org.jason.mapmaker2.service">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>
    <context:component-scan base-package="org.jason.mapmaker2.dao.hibernate">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>

        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" abstract="false"
          lazy-init="default" autowire="default">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:hsql://localhost/xdb"/>
        <property name="username" value="SA"/>
        <property name="password" value=""/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource">
            <ref local="dataSource"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">none</prop>
                <prop key="hibernate.max_fetch_depth">2</prop>
                <prop key="hibernate.c3p0.min_size">5</prop>
                <prop key="hibernate.c3p0.max_size">20</prop>
                <prop key="hibernate.c3p0.timeout">300</prop>
                <prop key="hibernate.c3p0.max_statements">50</prop>
                <prop key="hibernate.c3p0.idle_test_period">3000</prop>
                <prop key="hibernate.query.substitutions">true 1, false 0</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
                <prop key="hibernate.jdbc.batch_size">0</prop>
                <prop key="hibernate.jdbc.batch_versioned_data">true</prop>
                <prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>org.jason.mapmaker2.model.BorderPoint</value>
                <value>org.jason.mapmaker2.model.Location</value>
                <value>org.jason.mapmaker2.model.State</value>
                <value>org.jason.mapmaker2.model.TigerFeatureType</value>
                <value>org.jason.mapmaker2.model.StateCode</value>
                <value>org.jason.mapmaker2.model.SubCode</value>
            </list>
        </property>
        <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"/>
    </bean>

    <bean id="transactionAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="interceptorNames">
            <list>
                <idref bean="transactionInterceptor"/>
            </list>
        </property>
        <property name="beanNames">
            <list>
                <value>*Service</value>
                <!--<value>*Manager</value> dont use *Manager, it proxies the transactionManager-->
            </list>
        </property>
        <property name="optimize" value="true"/>
    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="allowCreate" value="false"/>
        <property name="sessionFactory">
            <ref local="sessionFactory"/>
        </property>
    </bean>

    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributeSource" ref="transactionAttributeSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="transactionAttributeSource"
          class="org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource"/>

    <bean id="hibernateGenericDao" class="org.jason.mapmaker2.dao.hibernate.HibernateGenericDao" abstract="true">
        <property name="hibernateTemplate" ref="hibernateTemplate"/>
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
</beans>